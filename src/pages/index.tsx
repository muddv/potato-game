import type { NextPage } from 'next'
import Head from 'next/head'
import { handleClientScriptLoad } from 'next/script'
import { useState } from 'react'
import { gameState, gameEvent, diceRoll, burrow, useDestiny, usePotatoes, useOrcs, useDanger } from "../game/game-logic"

export function GameInterface(props: { destiny: number, potatoes: number, orcs: number }) {

  

  return (
    <div className="border-2 border-black flex">
      <div className="flex gap-5 flex-col mr-auto ml-36">
        <div className="destiny flex flex-row gap-5">
          <div className="mr-3">Destiny</div>
          <div>{props.destiny}</div>
        </div>
        <div className="potatoes flex flex-row gap-5">
          <div className="">Potatoes</div>
          <div>{props.potatoes}</div>
        </div>
        <div className="orcs flex flex-row gap-5">
          <div className="mr-8">Orcs</div>
          <div>{props.orcs}</div>
        </div>
      </div>
    </div>
  )
}

const Home: NextPage = () => {

  const { destiny, desChange } = useDestiny()
  const { potatoes, potChange } = usePotatoes()
  const { orcs, orcChange } = useOrcs()
  const { danger, dangerChange } = useDanger()

  const [text, setText] = useState(txt)

  function textChange() {
    setText(txt)
  }

  let [showEvent, setShowEvent] = useState(false)

  function showEventWindow() {
    setShowEvent(!showEvent)
    console.log(showEvent)
  }

  let containerClass = showEvent ? "absolute z-10 bg-white border-2 border-black w-64 h-64" : "hidden"

  const [evLocation, setEvLocation] = useState(eventPlace)

  function setEventLocation() {
    setEvLocation(eventPlace)
  }

  const [evDescription, setEvDescription] = useState(eventDescription)

  function setEventDescription() {
    setEvDescription(eventDescription)
  }

  const [evEffect, setEvEffect] = useState(eventEffect)

  function setEventEffect() {
    setEvEffect(eventEffect)
  }

  const [showModalText, setShowModalText] = useState(false)

  function setModalTextClass() {
    setShowModalText(!showModalText)
  }

  let modalTextCls = showModalText ? "hidden" : ""

  let modalBtnCls = showModalText ? "border-2 border-black hover:bg-slate-400 mt-24" : "hidden"

  let modalTxtCls = showModalText ? "text-center" : "hidden"

  const [modalTxt, setModalTxt] = useState("You spend your day")

  function setPreviewText() {
    if (evLocation == "In the Garden...") {
      setModalTxt("While working in the garden you notice something...")
    }
    else if (evLocation === "A knock at the door...") {
      setModalTxt("You hear something at your door...")
    }
  }

  const [gameState, setGameState] = useState(true)

  function switchGameState() {
    if (destiny >= 10 || potatoes >= 10 || orcs >= 10) {
      setGameState(false)
    }
  }

  let gameStateTextClass = gameState ? "" : "hidden"

  let gameOverTextClass = gameState ? "hidden" : ""

  const [statsText, setStatsText] = useState("Your garden is new and there are not a lot of orc")

  function changeStatsText() {
    let potatoChange = false
    if (orcs > 2) {
      setStatsText("There are far too many orcs for your liking")
    } 
    if (destiny > 2) {
      setStatsText("Everywhere you look something calls you for adventure... Better hurry up with potatoes")
    } 
    if (potatoes > 2) {
      setStatsText("You are reliefed to have a small stash of potatoes")
      potatoChange = true
    } 
    if (potatoChange == true && potatoes < 3) {
      setStatsText("You are going to need more potatoes")
    }
  }

  return (
    <>
      <Head>
        <title>Potato game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header className="flex justify-center mt-10 text-xl font-semibold">POTATO GAME</header>
      <div className="flex flex-col items-center justify-center">
        <div className="w-1/2">
          <div className="mb-5"><GameInterface destiny={destiny} potatoes={potatoes} orcs={orcs}></GameInterface></div>
          <div className="text-center">{statsText}</div>
          <button onClick={() => {burrow(); potChange(); orcChange(); changeStatsText(); dangerChange();}} className="border-2 border-black hover:bg-slate-400 h-24 w-36 mt-2 mr-10">Hurl in the back garden -1 orc -{dangerLvl} potato</button>
          
          <div className={gameStateTextClass}>You are a halfing, just trying to exist meanwhile, the dark lord rampages across the world. You do not care about this. You are trying to farm potatoes because what could a halfling possibly do about it anyway? Roll the dice and see what new day brings to you!</div>
          <div className={gameOverTextClass}>GAME OVER</div>
        </div>
        <button className="border-2 border-black hover:bg-slate-400"
          onClick={() => { diceRoll(); showEventWindow(); setEventLocation(); setModalTextClass(); setPreviewText(); }}>
          roll dice!
        </button>
        
        {/* EVENT ~MODAL WINDOW */}
        <div className={containerClass}>
          <div className="flex flex-col justify-center align-center">
            <div className="font-semibold text-lg text-center">{evLocation}</div>
            <div className={modalTxtCls}>{modalTxt}</div>
            <button onClick={() => { setModalTextClass(); locationDiceRoll(); desChange(); potChange(); orcChange(); textChange(); setEventDescription(); setEventEffect(); changeStatsText(); }} 
            className={modalBtnCls}>
              Roll the dice and see what it is
              </button>
            <div className={modalTextCls}>
              <div className="text-center my-5">{evDescription}</div>
              <div className="flex gap-x-5 text-center ml-5 mb-5 font-semibold">
                <div>Destiny
                  <div className="font-normal">{evEffect[0]}</div>
                </div>
                <div>Potatoes
                  <div className="font-normal">{evEffect[1]}</div>
                </div>
                <div>Orcs
                  <div className="font-normal">{evEffect[2]}</div>
                </div>
              </div>
              <button className="border-2 border-black hover:bg-slate-400 ml-24 w-10" onClick={() => {showEventWindow(); switchGameState();}}>ok</button>
            </div>
          </div>
        </div>
        {/* END OF EVENT ~MODAL WINDOW */}

        <div className="font-semibold">Past Event</div>
        <div>{text}</div>
      </div>
    </>
  )
}

export default Home
